<xsl:stylesheet
        xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
        xmlns:fo="http://www.w3.org/1999/XSL/Format"
        xmlns:fox="http://xmlgraphics.apache.org/fop/extensions"
        xmlns:custom="urn:custom-functions"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        version="2.0">
  <xsl:include href="*/hmrc-frontend-fop-conversions.xsl"/>
  <xsl:include href="*/view_application-fop-conversions.xsl"/>
  <xsl:include href="*/hmrc-frontend-fop-matchers.xsl"/>

  <!-- This template is used to convert the 'application_view.scala.html' Twirl template into FOP elements & attributes.
       HTML elements following a standard pattern are converted by 'hmrc-frontend-fop-matchers.xsl'.
       Custom elements and elements which are different to the 'GOV.UK Design system' are defined here. -->

  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" media-type="application/pdf"/>

  <xsl:param name="documentAttributeSets"
             select="document('*/view_application-fop-conversions.xsl')//xsl:attribute-set"/>

  <xsl:template match="span[@class='address']" mode="pdf" priority="1">
    <fo:block>
      <xsl:apply-templates select="node()" mode="pdf"/>
    </fo:block>
  </xsl:template>

  <xsl:template match="div[@class='print-document']" mode="pdf" priority="1">
    <fo:block xsl:use-attribute-sets="print-document" break-before="page">
      <xsl:apply-templates select="node()" mode="pdf"/>
    </fo:block>
  </xsl:template>

  <xsl:template match="dl[@class='govuk-summary-list govuk-summary-list--no-border']" mode="pdf" priority="1">
    <fo:table table-layout="fixed" width="100%" xsl:use-attribute-sets="govuk-summary-list govuk-summary-list--no-border">
      <fo:table-body>
        <xsl:apply-templates select="node()" mode="pdf"/>
      </fo:table-body>
    </fo:table>
  </xsl:template>

  <xsl:template match="dt[@class='govuk-!-font-weight-bold']" mode="pdf" priority="1">
    <fo:table-row>
      <fo:table-cell>
        <fo:block xsl:use-attribute-sets="govuk-i-font-weight-bold">
          <xsl:apply-templates select="node()" mode="pdf"/>
        </fo:block>
      </fo:table-cell>
    </fo:table-row>
  </xsl:template>

  <xsl:template match="dd[@class='stack']" mode="pdf" priority="1">
    <fo:table-row>
      <fo:table-cell>
        <fo:block xsl:use-attribute-sets="stack">
          <xsl:apply-templates select="node()" mode="pdf"/>
        </fo:block>
      </fo:table-cell>
    </fo:table-row>
  </xsl:template>

  <xsl:template match="dd[@class='govuk-!-margin-left-0']" mode="pdf" priority="1">
    <fo:table-row>
      <fo:table-cell xsl:use-attribute-sets="govuk-i-margin-left-0">
        <fo:block >
          <xsl:apply-templates select="node()" mode="pdf"/>
        </fo:block>
      </fo:table-cell>
    </fo:table-row>
  </xsl:template>

  <xsl:template match="dt[@class='govuk-!-margin-left-0']" mode="pdf" priority="1">
    <fo:table-row>
      <fo:table-cell xsl:use-attribute-sets="govuk-i-margin-left-0">
        <fo:block>
          <xsl:apply-templates select="node()" mode="pdf"/>
        </fo:block>
      </fo:table-cell>
    </fo:table-row>
  </xsl:template>

  <xsl:template match="div[@class='header']" name="header" mode="pdf" priority="1">
    <xsl:choose>
      <xsl:when test="@data-render-header = 'yes'">
        <xsl:apply-templates select="node()" mode="pdf"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:comment>Header not rendered</xsl:comment>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="/">
    <fo:root xml:lang="en" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions">
      <fo:layout-master-set>
        <fo:simple-page-master master-name="main" page-height="297mm" page-width="210mm" margin-top="1.3cm"
                               margin-bottom="1.3cm" margin-left="1.4cm" margin-right="1.4cm">
          <fo:region-body region-name="xsl-region-body" margin-top="2.8cm" margin-bottom="0.5cm"/>
          <fo:region-before region-name="xsl-region-before" extent="2.8cm"/>
          <fo:region-after region-name="xsl-region-after"/>
        </fo:simple-page-master>
      </fo:layout-master-set>

      <fo:page-sequence master-reference="main">
        <fo:static-content flow-name="xsl-region-before">
          <fo:block>
            <xsl:apply-templates select="(//div[@class='header'])[1]/node()" mode="pdf"/>
          </fo:block>
        </fo:static-content>
        <fo:flow flow-name="xsl-region-body" text-align="left">
          <xsl:apply-templates select="." mode="pdf"/>
        </fo:flow>
      </fo:page-sequence>
    </fo:root>
  </xsl:template>


  <xsl:function name="custom:insert-soft-breaks" as="xs:string">
    <xsl:param name="text" as="xs:string"/>
    <xsl:choose>
      <xsl:when test="string-length($text) > 30">
        <xsl:value-of select="substring($text, 1, 30) || '&#x200B;' || custom:insert-soft-breaks(substring($text, 31))"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$text"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:function>


</xsl:stylesheet>
